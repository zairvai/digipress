type Account 
@aws_iam
@aws_cognito_user_pools {
	id: ID!
	name: String!
	uniqueURL: String!
	address: String!
	contactPerson: String!
	emailAddress: AWSEmail!
	phoneNumber: String!
	status: Int
	createdBy: User
	updatedBy: User
	createdAt: AWSDateTime
	updatedAt: AWSDateTime
	version: Int!
}

type AccountConnection {
	items: [Account]
	foundDocs: Int
}

input CreateAccountInput {
	name: String!
	uniqueURL: String!
	address: String!
	contactPerson: String!
	emailAddress: AWSEmail!
	phoneNumber: String!
}

input CreateUserInput {
	name: String!
	phoneNumber: String!
	emailAddress: AWSEmail!
	password: String
	accountId: ID!
	role: UserRole!
}

input DeleteItemInput {
	id: ID!
}

input GetItemInput {
	id: ID!
}

input ListItemInput {
	orderBy: String
	direction: String
	from: Int
	size: Int
}

type Mutation {
	createUser(input: CreateUserInput!): User
	updateUser(input: UpdateUserInput!): User
	deleteUser(input: DeleteItemInput!): User
	createAccount(input: CreateAccountInput!): Account
	updateAccount(input: UpdateAccountInput!): Account
	deleteAccount(input: DeleteItemInput!): Account
}

type Query {
	getAccount(input: GetItemInput!): Account
	listAccounts(input: ListItemInput): AccountConnection
	getAccountByUniqueUrl(url: String!): Account @aws_iam @aws_cognito_user_pools
	
	getUser(input: GetItemInput!): User
	getUserByEmailAddress(emailAddress: String!): User
	getUserByAccount(userId:ID!,accountId:ID!):User

	listUsers(input: ListItemInput): UserConnection
}

input UpdateAccountInput {
	id: ID!
	name: String
	uniqueURL: String
	address: String
	contactPerson: String
	emailAddress: AWSEmail
	phoneNumber: String
	status: Int
	expectedVersion: Int
}

input UpdateUserInput {
	id: ID!
	name: String
	emailAddress: AWSEmail
	phoneNumber: String
	password: String
	status: Int
	expectedVersion: Int!
}

type User 
@aws_iam
@aws_cognito_user_pools {
	id: ID!
	name: String!
	emailAddress: AWSEmail!
	phoneNumber: String
	emailAddressVerified: Boolean
	phoneNumberVerified: Boolean
	enabled: Boolean
	role: Access
	createdBy: User
	updatedBy: User
	createdAt: AWSDateTime
	updatedAt: AWSDateTime
	version: Int!
	status: Int
}

type Access {
	id:ID!
	userId:ID!
	accountId:ID!
	role:UserRole!
	createdBy: User
	updatedBy: User
	createdAt: AWSDateTime
	updatedAt: AWSDateTime
	version: Int!
	status:Int
}

type UserConnection {
	items: [User]
	foundDocs: Int
}

enum UserRole {
	Owner
	Admin
	Tutor
	Student
	Member
}